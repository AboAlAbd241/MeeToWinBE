#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://157.175.193.147:3306/test
#spring.datasource.username=meet
#spring.datasource.password=Outlook@800meettowin
##spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.show-sql = true
#spring.jpa.database = MYSQL
#server.error.include-message=always
#spring.jpa.properties.max_allowed_packet=2000

spring:
  datasource:
    url: jdbc:mysql://157.175.193.147:3306/test
    username: meet
    password: Outlook@800meettowin
  mail:
    default-encoding: UTF-8
    host: smtp.gmail.com
    username: meettowin@gmail.com
    password: dqbfojicaszgfzfs
    port: 587
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    protocol: smtp
    test-connection: false

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        order_inserts: true
        jdbc:
          batch_size: 1000
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 5014057553-8gm9um6vnli3cle5rgigcdjpdrid14m9.apps.googleusercontent.com
            clientSecret: tWZKVLxaD_ARWsriiiUFYoIk
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 265069552281922
            clientSecret: 779dc56fae00d3a96759689e95f39250
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            accessTokenUri: https://www.facebook.com/dialog/oauth
            tokenName: oauth_token
            scope:
              - email
              - public_profile
          github:
            clientId: 9c0725f336d8ed31e6c3
            clientSecret: 8ae7b89341d908ce5eeff119c63281c23c2c742f
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost:4200,http://localhost:8080,http://192.168.100.177:4200,http://192.168.100.177:8080,http://192.168.100.7:4200,http://192.168.100.7:8080
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:8080/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect

# Output to a file named spring.log in path /Users
logging:
  file:
    path: C:\Users\ahmad.az\Desktop\MeeToWin\logs.log
  level:
    com.meetowin.meetowin: trace

#server:
#  port: 8080
